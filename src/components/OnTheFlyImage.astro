---
interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  quality?: number;
  class?: string;
}

const {
  src,
  alt,
  width = 800,
  height = 600,
  quality = 80,
  class: className = ''
} = Astro.props;

// Sistema on-the-fly con images.weserv.nl
const isDev = import.meta.env.DEV;
const baseUrl = isDev ? 'http://localhost:4322' : 'https://kelua.netlify.app';
const imageUrl = src.startsWith('/') ? `${baseUrl}${src}` : src;

const getOptimizedUrl = (format: string) => {
  // In development, usa direttamente l'immagine originale SOLO per immagini locali
  if (isDev && src.startsWith('/')) {
    return src; // Usa l'immagine locale direttamente
  }
  
  // Per URL esterni (anche in development), usa weserv.nl
  const params = new URLSearchParams();
  params.set('url', imageUrl);
  params.set('output', format);
  params.set('w', width.toString());
  params.set('q', quality.toString());
  params.set('fit', 'cover');
  return `https://images.weserv.nl/?${params.toString()}`;
};

const webpSrc = getOptimizedUrl('webp');
const avifSrc = getOptimizedUrl('avif');

console.log('üñºÔ∏è OnTheFlyImage Debug:', { 
  original: src, 
  isDev,
  imageUrl,
  webp: webpSrc, 
  avif: avifSrc,
  isLocalPath: src.startsWith('/')
});
---

<picture class={className}>
  <source srcset={avifSrc} type="image/avif" />
  <source srcset={webpSrc} type="image/webp" />
  <img src={isDev && src.startsWith('/') ? src : webpSrc} alt={alt} width={width} height={height} loading="lazy" />
</picture>

<style>
  picture { display: block; width: 100%; height: 100%; }
  img { width: 100%; height: 100%; object-fit: cover; }
</style>
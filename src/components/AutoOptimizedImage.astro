---
interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  quality?: number;
  class?: string;
  loading?: 'lazy' | 'eager';
  sizes?: string;
}

const {
  src,
  alt,
  width = 800,
  height = 600,
  quality = 80,
  class: className = '',
  loading = 'lazy',
  sizes = '(min-width: 1024px) 800px, (min-width: 768px) 600px, 100vw'
} = Astro.props;

// Funzione per ottenere le versioni ottimizzate
const getOptimizedVersions = (originalSrc: string) => {
  if (!originalSrc || !originalSrc.startsWith('/uploads/')) {
    return { webp: null, avif: null, original: originalSrc };
  }

  // Estrai path e nome file
  const pathParts = originalSrc.split('/');
  const filename = pathParts[pathParts.length - 1];
  const directory = pathParts.slice(0, -1).join('/');
  
  // Rimuovi estensione e genera nomi ottimizzati
  const nameWithoutExt = filename.replace(/\.[^/.]+$/, '');
  
  const webpSrc = `${directory}/optimized/${nameWithoutExt}.webp`;
  const avifSrc = `${directory}/optimized/${nameWithoutExt}.avif`;
  
  return {
    webp: webpSrc,
    avif: avifSrc,
    original: originalSrc
  };
};

const { webp, avif, original } = getOptimizedVersions(src);

// In development, mostra info di debug
if (import.meta.env.DEV) {
  console.log('üñºÔ∏è AutoOptimizedImage:', { 
    original: src, 
    webp, 
    avif,
    hasOptimized: !!(webp && avif)
  });
}
---

<picture class={className}>
  {/* AVIF - formato pi√π efficiente */}
  {avif && (
    <source 
      srcset={avif} 
      type="image/avif"
      sizes={sizes}
    />
  )}
  
  {/* WebP - ottimo supporto browser */}
  {webp && (
    <source 
      srcset={webp} 
      type="image/webp"
      sizes={sizes}
    />
  )}
  
  {/* Fallback JPEG/PNG originale */}
  <img 
    src={original} 
    alt={alt} 
    width={width} 
    height={height} 
    loading={loading}
    class="auto-optimized-image"
  />
</picture>

<style>
  picture { 
    display: block; 
    width: 100%; 
    height: 100%; 
  }
  
  .auto-optimized-image { 
    width: 100%; 
    height: 100%; 
    object-fit: cover; 
  }
</style>